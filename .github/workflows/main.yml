name: Main

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  go_lint_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.18'
      - name: webapp lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          working-directory: src/webapp
      - name: webapp test
        run: | 
            cd src/webapp
            go test -v ./...
  
  python_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
            python-version: "3.10"
        
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install pylint
            pip install -r src/locust/requirements.txt
        
      - name: Analysing the code with pylint
        run: |
            pylint src/locust/locustfiles/*.py

  build_and_push:
    needs: [go_lint_test, python_lint]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [webapp, locust, serving]
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: "{{defaultContext}}:src/${{ matrix.app }}"
          tags: filbary/${{ matrix.app }}:latest
    
  helm_lint:
    needs: [build_and_push]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [webapp, locust, serving]
    steps:
      - uses: actions/checkout@v4

      - name: helm-lint
        run: helm lint charts/${{ matrix.app }}
  
  release:
    needs: [helm_lint]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          skip_existing: true
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"